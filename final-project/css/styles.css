/*Gives font family to the html both mobile and desktop */
html {
    font-family: 'Open Sans', sans-serif;
}

*{
    box-sizing: border-box;
}
body {
    overflow-x: hidden;
}
h1{
    font-size: 26px;
    margin-bottom: 6px;
}

h2 { 
    font-weight: bold;
    font-size: 2rem;
    margin-top: 1rem;
    margin-bottom: 1rem;    
}

h3 { 
    font-weight: bold;
    font-size: 3rem;
    margin-top: 1rem;
    margin-bottom: 1rem;    
}
p {
    font-size: 1rem;
    line-height: 1.4;
    margin-bottom: 1rem;
}
.wrapper{
    width: 80%;
    margin: 0 auto;
}
/*For mobile, gives a background color, and aligns content to the center with a margin of auto */
header {
    align-content: center;
    background-color: #222;
    margin: auto;
    width: 85%;
}

.logo {
    height: 100px;
    width: 100px;
}
.logo2{
    height: 150px;
    background-color: #c78c06;
}

.navli{
    background-color: #222;
}
nav li a {
    padding: 10px 5px;
    color: #c78c06;
    display: inline-block;
    width: 100%;
}
.navli{
    width: 600px;
    margin: auto;
}

ul 
{ align-items: center;
    display: flex;
    flex-direction: column;
    color: #c78c06;
    text-align: center;
    width: 100%;
}
nav ul li {
    width: 20%;
}
nav li a:hover, .active {
    background-color: #c78c06;
    color: #222;
    font-weight: bold;
}

.fa-solid{
    padding-left: 10px;
}

a:link{
    text-decoration: none;
}

input[id=search]{
    padding: 10px;
    width: 530px;
    padding: 5px 20px;
    margin: 8px 0;
    box-sizing: border-box;
  }

/*Gives dark background to the main content creating a dark box, I will use space around so it doesn't touch de edges  */
.main .maincontent {
    background-color: #2229 ;
    padding: 10px;
    position: absolute;
    width: 90%;
    left: 5%;
    top: 0;
    bottom: 0;
    margin: auto 0;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    height: 90%;
}
.main .maincontent .text {
    font-size: 14px;
    margin-bottom: 10px;
}
.container {
    width: 100vw;
    overflow-x: hidden;
}
.contain {
    width: 85%;
}
.main {
    position: relative;
    color: white;
    margin: auto;
    background-repeat: no-repeat;
    background-size: cover;
    box-sizing: border-box;
}

.search {
    width: 1.2rem;
    color: #c78c06;
    border: 1px solid #c78c06;
}
.search1 {
    display: flex;
    align-items: center;
}
.search1 .icon {
    padding: 5px;
    color: #c78c06;
    border: 1px solid #c78c06;
}
.services .card {
    display: grid;
    grid-template-rows: 1fr 1fr;
    display: flex;
    flex-direction: column;
}

img {
    width: 100%;
    height: auto;
}
/* I used float lef for the image located in about us section, I will use clearfix display block and clear both so it doesn't float to the right all my content*/
.clearfix::after{
    content: "";
    display: block;
    clear: both;
}

.button1 {
    padding: 6px;
    color: black; 
    background-color:#c78c06;
}

.about{
    padding: 10px;
    background-color: #ffe6ac ;
    margin: auto;
}

.services .content {
    padding: 10px;
    background-color: #ffe6ac;
}
.team .content {
    padding: 10px;
    background-color: #ffe6ac;
}
.button2{
    padding: 10px;
    color: white;
    background-color: #222;

}

.content hr{
    border-top: 2px solid #c78c06;
}


.button3{
    padding: 10px;
    color: white;
    background-color: #222;

}


.button4{
    padding: 10px;
    color: white;
    background-color: #222;

}

.button5{
    padding: 10px;
    color: white;
    background-color: #222;

}

.button6{
    padding: 10px;
    color: white;
    background-color: #222;

}
/*Gives style to Our vision section, giving a font color of white and a background image, re-sizes image to cover the the hole section*/
.vision{
    color: white;
    background-image: url("../images/vision.jpg");
    padding: 10px;
    width: 110%;
    margin-left: -5%;
    background-position: center;
    background-size: cover;
}

/*Gives style to button located in our vision setion, giving a border, font color and background-color */
.button7{
    padding: 10px;
    color: white;
    background-color: #222;
    border: 1px solid #c78c06;

}
/* Gives style to contact form affecting directly Fullname, email and message box*/
input[type=text] {
    width: 100%;
    padding: 5px 20px;
    margin: 8px 0;
    box-sizing: border-box;
  }

input[id=message]{
    width: 100%;
    height: 80px;
    padding: 12px 20px;
    margin: 8px 0;

  }
/*gives style to button located below the contact form for mobile*/
.button8{
    color:#c78c06;
    background-color: #222;
}

/*Gives style to table for schedule section both mobile and desktop adding a color to the main tittles */
td, th {
    border: 1px solid black;
     padding: 8px;
  }
  
  table {
    border: 1px solid black;
    border-collapse: collapse;
    width: 100%;
  }
  
  tr:nth-child(1){
    border: 1px solid black;
    background-color: #ffe6ac;
  }
  tr:nth-child(2){
    border: 1px solid black;

  }

  .map iframe {
    border:0;
    height: 450px;
    width:100%;
}
/*Centers footer for mobile with bleeding effect, and giving color to the background and the content*/
  footer{
      margin: auto;
      padding: 10px;
      width: 80%;
      background-color: #222;
      color: #c78c06;
  }
  footer a{
      color: #c78c06;
  }

@media screen and (min-width: 500px) {
    h1 {
        font-size: 2.5rem;
        margin-bottom: 1rem;
    }
    .contain .maincontent .text {
        font-size: 1rem;
        margin-bottom: 1rem;
    }
    .button1 {
        padding: 10px;
    }
    h2 {
        font-size: 2rem;
    }
    h3{
        font-size: 2rem;
    }
}

@media screen and (min-width: 600px) {
    h1 {
        font-size: 3rem;
    }
}

@media screen and (min-width: 760px) {
    h1 {
        font-weight: bold;
        font-size: 4rem;
    }
    h2{
        font-weight: bold;
    }
    h3{
        font-weight: bold;
    }
}
  /*Media screen for desktop starting at 1200px*/
@media screen and (min-width: 1200px) {
    h1{
        font-size: 4rem;
        font-weight: bold;
    }
    h2{
        font-weight: bold;
    }
    h3{
        font-weight: bold;
    }
    header {
        display: flex;
        width: 100%;
    }
    .header {
        display: grid;
        grid-template-columns: 4fr 1fr;
        align-items: center;
        padding: 1rem 0;
    }

    nav {
        display: flex;
        width: 100%;
        grid-gap: 3rem;
    }

    nav .logo2 {
        width: 60px;
        height: 60px;
    }
    
    nav .logo2 .logo {
        width: 60px;
        height: 60px;
    }

    .header .search1 {
        margin-left: 1rem;
    }

    .header .search {
        border: 0;
    }

    .header .search i {
        padding: 5px;
        border: 1px solid #c78c06;
    }
    
    nav ul {
        flex-direction: row;
        display: flex;
        align-items: center;
        justify-content: space-between;
        width: 100%;
    }
    
    li{
        display: inline-block;
    }
    .logo{
        float:left;
    }

    .about img{
        padding: 1rem;
        width: 40%;
        float: left;

    }

    .main img {
        height: 30rem;
    }
/*For desktop I will use a grid of 6 columns and 3 rows for the services section adding a grip gap so they are separate. Also, giving specificity to the services*/
    .contain .services {
        display: grid;
        grid-template-columns: repeat(6, 1fr);
        grid-template-areas: 
            "area0 area0 area0 area0 area0 area0"
            "area1 area1 area1 area2 area2 area2"
            "area3 area3 area4 area4 area5 area5";
        grid-gap: 1rem;
    }
    .contain .services .card .content {
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
    }
    .contain .services .title {
        grid-area: area0;
    }
    .digital {
        grid-area: area1;
    } 
    .marketing {
        grid-area: area2;
    }
    .video {
        grid-area: area3;
    }
    .web {
        grid-area: area4;
    }
    .print {
        grid-area: area5;
    }
    
    .vision{
        padding: 50px;
        margin-top: 10px;
    }
    /*Creates a display flex on the team section, this will affect both CEO and CFO, in order to put the image and text of CFO section in different order I will use flex-direction: row-reverse affecting only the CFO */
    .contain .team .card {
        display: flex;
    }
    .contain .team .cfo {
        flex-direction: row-reverse;
    }

    .contain .team .card .info {
        width: 50%;
    }

    .ceo content{
        grid-area: area7;
    }
    .cfo{
        grid-area: area9;
    }
    .contentinfo{
        grid-area: area7;
    }
    .content2{
        grid-area: area9;
    }
    /*A div with a class of form contains contact, schedule and map. For desktop I will use a grid-template-area of 2 coulmuns. contact and schedule to ocupy the first column and map and schedule to ocupy the second column */
    .form{
        grid-gap: 1rem;
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-template-areas:
        "area10 area11"
        "area12 area12"
    }
    .schedule{
        margin-bottom: 3rem;
        grid-area:area12;
    }
    .contact{
        grid-area: area10;
    }
    .contact h2{
        font-size: 3rem;
    }
    .contact h3 {
        font-size: 1.5rem;
    }

    .map h2{
        font-size:3rem ;
    }

    .map{
        grid-area: area11;
    }
    .button8 {
        width: 3rem;
    }
    footer{
        width: 100%;
        padding: 1rem;
        padding-left: 6rem;
    }
            
    }
